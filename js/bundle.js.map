{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kDAAS;AAC3C;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sCAAsC;AAClE,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO,mBAAmB,uBAAuB;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA,iDAAiD,uBAAuB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB,GAAG,iBAAiB,eAAe,EAAE,IAAI,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;AChLX;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA,qCAAqC,uBAAuB;AAC5D,qCAAqC,uBAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;AC1DxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;ACpCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;UClEnB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNoC;AACQ;AACV;AAClC;AACA;AACA;AACA;AACA,qBAAqB,0DAAS;AAC9B;AACA;AACA;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,CAAC","sources":["webpack:///./js/modules/TicTacToe.js","webpack:///./js/modules/gameField.js","webpack:///./js/modules/modal.js","webpack:///./js/modules/tabs.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/script.js"],"sourcesContent":["import GameField from \"./gameField\";\r\n\r\nfunction transposing2DMatrix(array) {\r\n    return array[0].map((item, index) => array.map(row => row[index]));\r\n}\r\n\r\nclass TicTacToe {\r\n    #field;\r\n    #winComb;\r\n    #counter;\r\n    #winner;\r\n    #players = ['X', 'O'];\r\n    #fieldSize;\r\n    #avaliableSteps;\r\n    #fieldInstance;\r\n    #prevStep;\r\n\r\n    constructor (fieldSize=3, winComb=3, gameBlockSelector) {\r\n        this.#fieldSize = fieldSize;\r\n        this.#fieldInstance = new GameField(fieldSize, gameBlockSelector);\r\n        this.#field = this.#fieldInstance.createField();\r\n        this.#winComb = winComb;\r\n        this.#avaliableSteps = fieldSize**2;\r\n        this.#counter = 0;\r\n        this.#winner;\r\n        this.#prevStep = {x: null, y: null};   \r\n    }\r\n\r\n    renderGameField() {\r\n        this.#fieldInstance.render();\r\n    }\r\n\r\n    #checkWinner(player) {\r\n        const lineCheck = (field) => {\r\n            for (let i = 0; i < this.#fieldSize; i++) {\r\n                for (let j = 0; j <= this.#fieldSize - this.#winComb; j++) {\r\n                    let horizontal = field[i].slice(0 + j, this.#winComb + j).join(''),\r\n                        vertical = transposing2DMatrix(field)[i].slice(0 + j, this.#winComb + j).join('');\r\n\r\n                    if (horizontal === player.repeat(this.#winComb) || vertical === player.repeat(this.#winComb)) {\r\n                        return this.#winner = player;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        const diagonalCheck = (field) => {\r\n            for (let i = 0; i <= this.#fieldSize - this.#winComb; i++) {\r\n                for (let j = 0; j <= this.#fieldSize - this.#winComb; j++) {\r\n                    let diagolal1 = '',\r\n                        diagolal2 = '';\r\n\r\n                    for (let k = 0; k < this.#winComb; k++) {\r\n                        diagolal1 += field[k + i][k + j];\r\n                        diagolal2 += field[k + i][j + this.#winComb - k - 1];\r\n                    }\r\n                    if (diagolal1 === player.repeat(this.#winComb) || diagolal2 === player.repeat(this.#winComb)) {\r\n                        return this.#winner = player;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        lineCheck(this.#field);\r\n        diagonalCheck(this.#field);\r\n        \r\n        if(!this.#avaliableSteps) {\r\n            console.log('Draw!');\r\n            return;\r\n        }\r\n\r\n        console.log((this.#winner) ? `Winner is '${player}'!` : `Next move ${this.checkNextPlayer()}`);\r\n    }\r\n\r\n    checkNextPlayer = () => (this.#counter % 2 === 0) ? 'X' : 'O';\r\n\r\n    #isPlayerExist = (player) => this.#players.some(value => value === player.toUpperCase());\r\n\r\n    #isRightUserInputCoord = (x, y) => 0 <= x < this.#fieldSize && 0 <= y < this.#fieldSize;\r\n\r\n    step([x, y], player) {\r\n        if(this.#winner) {\r\n            console.log(`The winner is ${this.#winner}. if you want play again, please, restart.`);\r\n            return;\r\n        }\r\n        \r\n        if(!this.#avaliableSteps) {\r\n            console.log(`Draw! if you want play again, please, restart.`);\r\n            return;\r\n        }\r\n        \r\n        if(!this.#isPlayerExist(player)) {\r\n            console.log(`Player '${player}' doen't exist.`);\r\n            return\r\n        }  \r\n\r\n        if(this.checkNextPlayer() !== player) {\r\n            console.log(`It's time for player '${this.checkNextPlayer()}'!`);\r\n            return;\r\n        } \r\n\r\n        if(this.#field[x][y]) {\r\n            console.log(\"That cell is already occupied. Try again.\");\r\n            return;\r\n        } \r\n\r\n        if(!this.#isRightUserInputCoord(x, y)) {\r\n            console.log(`In field ${this.#fieldSize}x${this.#fieldSize} coordinates [${x}, ${y}] don't exist.`);\r\n            return;\r\n        }  \r\n       \r\n        this.#counter++;\r\n        this.#avaliableSteps--;\r\n        this.#field[x][y] = player;\r\n        [this.#prevStep.x, this.#prevStep.y] = [x, y];\r\n\r\n        return this.#checkWinner(player);\r\n    }\r\n    \r\n    restartGame() {\r\n        this.#winner = null;\r\n        this.#counter = 0;\r\n        this.#avaliableSteps = this.#fieldSize ** 2;\r\n        this.#field = this.#fieldInstance.createField();\r\n    }\r\n\r\n    backOneStep() {\r\n        if(Object.values(this.#prevStep).some(item => typeof item != 'undefined')) {\r\n            console.log(\"You didn't make any move.\");\r\n            return;\r\n        }\r\n\r\n        if(this.#field[this.#prevStep.x][this.#prevStep.y] == undefined) {\r\n            return;\r\n        }\r\n\r\n        this.#winner = null;\r\n        this.#counter--;\r\n        this.#avaliableSteps++;\r\n        this.#field[this.#prevStep.x][this.#prevStep.y] = null;\r\n    }\r\n\r\n    get gameBlock() {\r\n        return this.#fieldInstance.gameBlock;\r\n    }\r\n\r\n    get winner() {\r\n        return this.#winner;\r\n    }\r\n\r\n    get field() {\r\n        return this.#field;\r\n    }\r\n\r\n    get avaliableSteps() {\r\n        return this.#avaliableSteps;\r\n    }\r\n\r\n    set winComb(winComb) {\r\n        if(typeof winComb === 'number' && winComb >= 3 && winComb <= this.#fieldSize) {\r\n            this.#winComb = winComb;\r\n        }   \r\n    }\r\n\r\n    set fieldSize(fieldSize) {\r\n        if(typeof fieldSize !== 'number' || fieldSize < 3) {\r\n            return;\r\n        }\r\n\r\n        this.#fieldSize = fieldSize;\r\n        this.#fieldInstance.fieldSize = fieldSize;\r\n        this.restartGame();\r\n    }\r\n\r\n}\r\n\r\nexport default TicTacToe;","'use strict';\r\n\r\nclass GameField {\r\n    #fieldSize;\r\n    #gameBlock;\r\n\r\n    constructor (fieldSize, gameBlockSelector) {\r\n        this.#fieldSize = fieldSize;\r\n        this.#gameBlock = document.querySelector(gameBlockSelector);\r\n    }\r\n\r\n    render() {\r\n        const div = document.createElement('div'), \r\n              table = document.createElement('table');\r\n\r\n        div.classList.add('board-container');\r\n        table.classList.add('game-field');\r\n\r\n        for(let i = 0; i < this.#fieldSize; i++) {\r\n            const tr = document.createElement('tr');\r\n\r\n            for(let j = 0; j < this.#fieldSize; j++) {\r\n                const td = document.createElement('td');\r\n               td.style.height = `${ 100 / this.#fieldSize }%`;\r\n                td.style.width = `${ 100 / this.#fieldSize }%`;\r\n\r\n                tr.appendChild(td);\r\n            }\r\n\r\n            table.appendChild(tr);\r\n        }\r\n\r\n        div.appendChild(table);\r\n        this.#gameBlock.innerHTML = '';\r\n        this.#gameBlock.appendChild(div);\r\n    }\r\n\r\n    createField() {\r\n        if(this.#fieldSize < 3) {\r\n            throw new Error('field should be bigger than 2');\r\n        } \r\n\r\n        return Array(this.#fieldSize).fill().map(() => Array(this.#fieldSize).fill());\r\n    }\r\n\r\n    get gameBlock() {\r\n        return this.#gameBlock;\r\n    }\r\n\r\n    set fieldSize(fieldSize) {\r\n        if(typeof fieldSize !== 'number' && fieldSize < 3) {\r\n            return;\r\n        }\r\n\r\n        this.#fieldSize = fieldSize;\r\n    }\r\n}\r\n\r\nexport default GameField;","class Modal {\r\n    #modal;\r\n    constructor(modalSelector) {\r\n        this.#modal = document.querySelector(modalSelector);\r\n    }\r\n    openModal() {\r\n        this.#modal.style.display = 'block';\r\n        document.body.style.overflow = 'hidden';\r\n    }\r\n    closeModal() {\r\n        this.#modal.style.display = 'none';\r\n        document.body.style.overflow = '';\r\n    }\r\n    get modal() {\r\n        return this.#modal;\r\n    }\r\n} \r\n\r\nfunction modal(triggerSelector, modalSelector) {\r\n    const modalTriggers = document.querySelectorAll(triggerSelector),\r\n        modal = new Modal(modalSelector);\r\n    modalTriggers.forEach((item) => item.addEventListener('click', () => modal.openModal()));\r\n    modal.modal.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n        if( target === modal || target.getAttribute('data-close') == '') {\r\n            modal.closeModal();\r\n        }\r\n    });\r\n    document.addEventListener('keydown', (event) => {\r\n        if(event.code === 'Escape' && modal.classList.contains('show')) {\r\n            modal.closeModal();\r\n        }\r\n    }); \r\n}\r\n\r\n\r\nexport default modal;\r\n","function tabs (gameInstanse) {\r\n    const gameBlock = document.querySelector('#game-block'),\r\n      restartButton = document.querySelector('.restart'),\r\n      settingsForm = document.querySelector('form'),\r\n      backOneStepButton = document.querySelector('.back-one-step'),\r\n      result = document.querySelector('.result');\r\n      \r\n    let cellsArray = Array.from(gameBlock.querySelector('.board-container').querySelector('.game-field').childNodes).map(item => Array.from(item.childNodes));\r\n\r\n    gameBlock.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if(target.tagName != 'TD') return;\r\n        \r\n\r\n        fillCells(target);    \r\n        showResult();\r\n    });\r\n\r\n    function fillCells(target) {\r\n        gameInstanse.step([target.parentNode.rowIndex, target.cellIndex], gameInstanse.checkNextPlayer());\r\n        renewRenderField(cellsArray);\r\n\r\n    }\r\n\r\n    function showResult() {\r\n        if(gameInstanse.winner) {\r\n            result.textContent = `Result: Winner is '${gameInstanse.winner}'!`; \r\n        }\r\n\r\n        if(!gameInstanse.avaliableSteps) {\r\n            result.textContent = 'Result: Draw!';\r\n        }\r\n    }\r\n\r\n    function renewRenderField(cellsArray) {\r\n        gameInstanse.field.forEach((array, i) => array.forEach((value, j) => cellsArray[i][j].textContent = (value) ? value : ''));\r\n    }\r\n\r\n    restartButton.addEventListener('click', () => {\r\n        result.textContent = '';\r\n        gameInstanse.restartGame();\r\n        renewRenderField(cellsArray);\r\n    });\r\n\r\n    backOneStepButton.addEventListener('click', () => {\r\n        gameInstanse.backOneStep();\r\n        renewRenderField(cellsArray);\r\n        result.textContent = '';\r\n    });\r\n\r\n    settingsForm.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData(settingsForm),\r\n            formObj = {};\r\n        \r\n        formData.forEach((value, key) => (formObj[key] = value));\r\n\r\n        gameInstanse.fieldSize = +formObj.fieldSize;\r\n        gameInstanse.winComb = +formObj.winComb;\r\n        gameInstanse.renderGameField();\r\n        cellsArray = Array.from(gameBlock.querySelector('.board-container').querySelector('.game-field').childNodes).map(item => Array.from(item.childNodes));\r\n    });\r\n}\r\n\r\nexport default tabs;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import modal from './modules/modal';\r\nimport TicTacToe from './modules/TicTacToe';\r\nimport tabs from './modules/tabs';\r\n\r\n'use strict';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const game = new TicTacToe(3, 3, '#game-block');\r\n\r\n    game.renderGameField();\r\n\r\n    tabs(game);\r\n    modal('[data-modal]', '.modal');\r\n});\r\n"],"names":[],"sourceRoot":""}